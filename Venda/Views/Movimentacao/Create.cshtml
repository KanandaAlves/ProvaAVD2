@model Venda.Models.Movimentacao

@{
    ViewData["Title"] = "Cadastrar Movimentação";
}

<h1>Cadastrar Movimentação</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProdutoId" class="control-label"></label>
                <select asp-for="ProdutoId" class ="form-control" asp-items="ViewBag.ProdutoId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Quantidade" class="control-label"></label>
                <input asp-for="Quantidade" class="form-control" />
                <span asp-validation-for="Quantidade" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataMovimentacao" class="control-label"></label>
                <input asp-for="DataMovimentacao" class="form-control" />
                <span asp-validation-for="DataMovimentacao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Tipo">Tipo de Movimentação</label>
                @Html.DropDownListFor(
                         model => model.Tipo,
                         new SelectList(Enum.GetValues(typeof(Movimentacao.TipoMovimentacao))),
                         "Selecione",
                         new { @class = "form-control" }
                         )
            </div>
            <div class="form-group">
                <input type="submit" value="Cadastrar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar para listagem</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
